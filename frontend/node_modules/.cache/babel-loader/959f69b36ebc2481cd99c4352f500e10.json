{"ast":null,"code":"var _jsxFileName = \"/home/trite/PycharmProjects/rebla_worktest/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //declare variable to hold fetch'd data\n  const [data, setData] = useState([{}]);\n  useEffect(() => {\n    //send http request get to backend /time\n    fetch(\"/time\", {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then( //\n    res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trite/PycharmProjects/rebla_worktest/frontend/src/App.js"],"names":["React","useState","useEffect","App","data","setData","fetch","method","mode","cache","credentials","headers","then","res","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAI,IAAAA,KAAK,CAAC,OAAD,EAAU;AACKC,MAAAA,MAAM,EAAE,KADb;AAEKC,MAAAA,IAAI,EAAE,MAFX;AAGKC,MAAAA,KAAK,EAAE,UAHZ;AAIKC,MAAAA,WAAW,EAAE,aAJlB;AAKKC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALd,KAAV,CAAL,CAQkBC,IARlB,EASI;AACAC,IAAAA,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAVX,EAWEF,IAXF,CAYIR,IAAI,IAAI;AACJC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACH,KAfL;AAiBH,GAnBQ,EAmBN,EAnBM,CAAT;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GAhCQD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction App() {\n    //declare variable to hold fetch'd data\n    const [data, setData] = useState([{}])\n\n    useEffect(() => {\n        //send http request get to backend /time\n        fetch(\"/time\", {\n                            method: 'GET',\n                            mode: 'cors',\n                            cache: 'no-cache',\n                            credentials: 'same-origin',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }\n                       }).then(\n            //\n            res => res.json()\n        ).then(\n            data => {\n                setData(data)\n                console.log(data)\n            }\n        )\n    }, [])\n\n\n\n\n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}